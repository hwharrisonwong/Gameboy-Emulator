#ifndef INCLUDE_DISPLAY_DISPLAY_H
#define INCLUDE_DISPLAY_DISPLAY_H

#include <GL/glew.h>
#include <GLFW/glfw3.h>
#include <string>

/******************************************************************************
*
*        [CLASS] Display (Display)
*
*  [ABSTRACTION] Controller between the player and the hardware. Displays
*                synchronous visual and audio info generated by the hardware
*                to the user. Relays asynchronous user input to the hardware
*                to process. Serves as a wrapper around window and input
*                libraries (e.g. freeGlut vs GLFW).
*
*******************************************************************************/
class Display
{
public:
                 Display(int mWidth, int mHeight);
                 ~Display();
   static void   keyCallback(GLFWwindow* mpWindow, int key, int scancode, int action, int mods);
   void          display();
   bool          isActive();
   void          setWindowSize(int mWidth, int mHeight);

   static std::string CLASS_NAME;
private:
   void          draw();
   void          outputAudio();
   void          pollInput();
   void          setCallbacks();
   GLFWwindow*   mpWindow;
   uint32_t*     mpVidBuff;
   char*         mpAudioBuff;
   int           mWidth;
   int           mHeight;

   /* Debug members */
   void          updateFpsStats(int drawTime);
   void          displayFps();
   int           mImgCount;
   int           mAccImgDrawTime;
   int           mAvgImgDrawTime;
};

#endif
